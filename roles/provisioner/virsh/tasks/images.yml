- name: remove pre-existing file
  file:
      state: absent
      dest: "/var/lib/libvirt/images/base_image.qcow2"

- name: download base guest image
  get_url:
      url: "{{ provisioner.image.server }}/{{ guest_image }}"
      dest: "/var/lib/libvirt/images/base_image.qcow2"
  register: result
  until: result.msg.find("Request failed") == -1
  retries: 5
  delay: 5

- name: clean our guest image
  shell: "virt-sysprep -a /var/lib/libvirt/images/base_image.qcow2 --operations dhcp-client-state,dhcp-server-state,net-hostname,net-hwaddr,udev-persistent-net"

- name: reset the password to a default one and inject our SSH key
  shell: "virt-customize -a /var/lib/libvirt/images/base_image.qcow2 --root-password password:redhat --ssh-inject root:file:/root/.ssh/id_rsa.pub --selinux-relabel"

- name: removing cloud-init
  shell: "virt-customize -a /var/lib/libvirt/images/base_image.qcow2 --run-command 'yum remove cloud-init* -y'"

  # TODO: configure interfaces based on config rather than hardcode
- name: configure three network interfaces for the image
  shell: "virt-customize -a /var/lib/libvirt/images/base_image.qcow2 --run-command 'cp /etc/sysconfig/network-scripts/ifcfg-eth{0,1} && sed -i s/DEVICE=.*/DEVICE=eth1/g /etc/sysconfig/network-scripts/ifcfg-eth1'"

  # TODO: configure interfaces based on config rather than hardcode
- name: configure three network interfaces for the image
  shell: "virt-customize -a /var/lib/libvirt/images/base_image.qcow2 --run-command 'cp /etc/sysconfig/network-scripts/ifcfg-eth{1,2} && sed -i s/DEVICE=.*/DEVICE=eth2/g /etc/sysconfig/network-scripts/ifcfg-eth2'"

- name: create the image disks for our nodes
  template:
      dest: "~/create_disks.sh"
      src: "create_disks.sh.j2"
      mode: 0755

- name: the create disks script
  shell: "cat ~/create_disks.sh"

- name: execute the create disks script
  shell: "bash ~/create_disks.sh"
